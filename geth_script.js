function main(contract_address, low_price, closing_price)
{
  var ko_abi= [	{		"constant": false,		"inputs": [],		"name": "buyShare",		"outputs": [],		"payable": true,		"stateMutability": "payable",		"type": "function"	},	{		"inputs": [			{				"internalType": "address payable",				"name": "_chairperson",				"type": "address"			},			{				"internalType": "uint256",				"name": "_knock_out_threshold",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_leverage",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_startPrice",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_runTime",				"type": "uint256"			},			{				"internalType": "bool",				"name": "_isPut",				"type": "bool"			}		],		"payable": true,		"stateMutability": "payable",		"type": "constructor"	},	{		"anonymous": false,		"inputs": [			{				"indexed": false,				"internalType": "address",				"name": "terminatorAddress",				"type": "address"			}		],		"name": "ContractEnded_ev",		"type": "event"	},	{		"constant": false,		"inputs": [],		"name": "endContract",		"outputs": [],		"payable": false,		"stateMutability": "nonpayable",		"type": "function"	},	{		"anonymous": false,		"inputs": [			{				"indexed": false,				"internalType": "uint256",				"name": "stockValue",				"type": "uint256"			}		],		"name": "KnockOut_ev",		"type": "event"	},	{		"constant": false,		"inputs": [],		"name": "retractContract",		"outputs": [],		"payable": false,		"stateMutability": "nonpayable",		"type": "function"	},	{		"constant": false,		"inputs": [],		"name": "sellShare",		"outputs": [],		"payable": true,		"stateMutability": "payable",		"type": "function"	},	{		"constant": false,		"inputs": [			{				"internalType": "uint256",				"name": "_newrunEndTime",				"type": "uint256"			}		],		"name": "setrunEndTime",		"outputs": [],		"payable": false,		"stateMutability": "nonpayable",		"type": "function"	},	{		"anonymous": false,		"inputs": [			{				"indexed": false,				"internalType": "address payable",				"name": "shareHolderAddress",				"type": "address"			},			{				"indexed": false,				"internalType": "uint256",				"name": "amount",				"type": "uint256"			}		],		"name": "ShareBought_ev",		"type": "event"	},	{		"anonymous": false,		"inputs": [			{				"indexed": false,				"internalType": "address payable",				"name": "shareHolderAddress",				"type": "address"			},			{				"indexed": false,				"internalType": "uint256",				"name": "amount",				"type": "uint256"			}		],		"name": "ShareSold_ev",		"type": "event"	},	{		"constant": false,		"inputs": [			{				"internalType": "uint256",				"name": "_minimum",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "_closing_price",				"type": "uint256"			}		],		"name": "update",		"outputs": [],		"payable": true,		"stateMutability": "payable",		"type": "function"	},	{		"constant": false,		"inputs": [],		"name": "withdraw",		"outputs": [			{				"internalType": "bool",				"name": "",				"type": "bool"			}		],		"payable": false,		"stateMutability": "nonpayable",		"type": "function"	},	{		"constant": true,		"inputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"name": "activeShareHolder",		"outputs": [			{				"internalType": "address payable",				"name": "account",				"type": "address"			},			{				"internalType": "uint256",				"name": "amount",				"type": "uint256"			},			{				"internalType": "uint256",				"name": "buying_closing_price",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "chairperson",		"outputs": [			{				"internalType": "address payable",				"name": "",				"type": "address"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "contractCreator",		"outputs": [			{				"internalType": "address payable",				"name": "",				"type": "address"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "ended",		"outputs": [			{				"internalType": "bool",				"name": "",				"type": "bool"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "isPut",		"outputs": [			{				"internalType": "bool",				"name": "",				"type": "bool"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "knock_out_threshold",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "last_closing_price",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "leverage",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [			{				"internalType": "address",				"name": "",				"type": "address"			}		],		"name": "pendingReturns",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "pot",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	},	{		"constant": true,		"inputs": [],		"name": "runEndTime",		"outputs": [			{				"internalType": "uint256",				"name": "",				"type": "uint256"			}		],		"payable": false,		"stateMutability": "view",		"type": "function"	}];
  var gas_estimate = 3000000;
  var gas_price = web3.toWei(35, "gwei");

  var firstAccount="0x6fb69574ffd1de3a92b1b44e886f108934f0925f";
  // var contract_address="0xDdc75D5126f9a68C6eF3330308dC71B3dCE4Ea60";

  var contractAbi = eth.contract(ko_abi);
  var contractInstance = contractAbi.at(contract_address);

  // suppose you want to call a function named myFunction of myContract
  var getData = contractInstance.update.getData(low_price,closing_price);

  web3.eth.sendTransaction({to:contract_address, from:firstAccount, data: getData, gas:gas_estimate, gasPrice:gas_price});
} 