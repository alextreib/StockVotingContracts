{
  "contractName": "BettingContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BettingEnded",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bidEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "bidValue",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stockValue",
          "type": "uint256"
        }
      ],
      "name": "bettingEnd",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BettingEnded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stockValue\",\"type\":\"uint256\"}],\"name\":\"bettingEnd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bidValue\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bidEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"bettingEnd(uint256)\":{\"notice\":\"End the auction and send the highest bid to the beneficiary.\"},\"bid(uint256)\":{\"notice\":\"Bid on the auction with the value sent together with this transaction. The value will only be refunded if the auction is not won.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Alexander/Desktop/repo/contracts/BettingContract.sol\":\"BettingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Alexander/Desktop/repo/contracts/BettingContract.sol\":{\"keccak256\":\"0x0b8eb58b2b53acc757ffbd6787938efa3a1191e9bcfdeb07a0db10ac1c72c999\",\"urls\":[\"bzz-raw://c8315113a2d7274133fbc124fb743e7e8328cfc58336f17dadf73ec63d8be452\",\"dweb:/ipfs/QmVoLmoh9u3MEwAMdaxdPk8c5VeM2TcJALaXAJUULfvYjc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061031e806100206000396000f3fe60806040526004361061003f5760003560e01c80634423c5f114610044578063454a2ab3146100c65780634ba9a927146100f45780636cf151f01461011f575b600080fd5b34801561005057600080fd5b5061007d6004803603602081101561006757600080fd5b810190808035906020019092919050505061015a565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6100f2600480360360208110156100dc57600080fd5b81019080803590602001909291905050506101ab565b005b34801561010057600080fd5b5061010961025a565b6040518082815260200191505060405180910390f35b34801561012b57600080fd5b506101586004803603602081101561014257600080fd5b8101908080359060200190929190505050610260565b005b6000818154811061016757fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60015481565b6001600260006101000a81548160ff0219169083151502179055507fdb7590473376bc361409dd8125823c3ee0e7adb45904229eca95153e8781c5e83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15056fea265627a7a723158209f242a26f6a62e77ad4f0edcf6aa94a4ea403ca6d1c4bf4cc6db8abaa8bfe25764736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c80634423c5f114610044578063454a2ab3146100c65780634ba9a927146100f45780636cf151f01461011f575b600080fd5b34801561005057600080fd5b5061007d6004803603602081101561006757600080fd5b810190808035906020019092919050505061015a565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6100f2600480360360208110156100dc57600080fd5b81019080803590602001909291905050506101ab565b005b34801561010057600080fd5b5061010961025a565b6040518082815260200191505060405180910390f35b34801561012b57600080fd5b506101586004803603602081101561014257600080fd5b8101908080359060200190929190505050610260565b005b6000818154811061016757fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600060405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60015481565b6001600260006101000a81548160ff0219169083151502179055507fdb7590473376bc361409dd8125823c3ee0e7adb45904229eca95153e8781c5e83382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15056fea265627a7a723158209f242a26f6a62e77ad4f0edcf6aa94a4ea403ca6d1c4bf4cc6db8abaa8bfe25764736f6c63430005100032",
  "sourceMap": "49:5940:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:5940:0;;;;;;;",
  "deployedSourceMap": "49:5940:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:17:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;524:17:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:1566;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1952:1566:0;;;;;;;;;;;;;;;;;:::i;:::-;;632:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;632:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4400:1586;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4400:1586:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4400:1586:0;;;;;;;;;;;;;;;;;:::i;:::-;;524:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1952:1566::-;2760:4;2770:78;;;;;;;;2828:8;2770:78;;;;2798:10;2770:78;;;;;2760:89;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2760:89:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1952:1566;:::o;632:22::-;;;;:::o;4400:1586::-;5761:4;5753:5;;:12;;;;;;;;;;;;;;;;;;5867:36;5880:10;5892;5867:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;4400:1586;:::o",
  "source": "pragma solidity 0.5.16;\r\n\r\n//todo: StockBetting\r\ncontract BettingContract {\r\n    // Parameters of the auction. Times are either\r\n    // absolute unix timestamps (seconds since 1970-01-01)\r\n    // or time periods in seconds.\r\n    //todo: list of persons that can bid\r\n\r\n     // This is a type for a single proposal.\r\n    // todo: person? Bid-> Bider\r\n    struct Bid {\r\n        // bytes32 name;   // short name (up to 32 bytes)\r\n        uint bid; // number of accumulated votes\r\n        address payable account;\r\n    }\r\n\r\n    Bid[] public bids;\r\n\r\n    // address payable public person_a;\r\n    // address payable public person_b;\r\n    uint public bidEndTime;\r\n\r\n    //todo: publish address of winner (after contract ended)\r\n    // Current state of the auction.\r\n    // address public highestBidder;\r\n    // uint public highestBid;\r\n\r\n    //tocheck: Not allowed\r\n    // Allowed withdrawals of previous bids\r\n    // mapping(address => uint) pendingReturns;\r\n\r\n    // Set to true at the end, disallows any change.\r\n    // By default initialized to `false`.\r\n    bool ended;\r\n\r\n    // Events that will be emitted on changes.\r\n    // event HighestBidIncreased(address bidder, uint amount);\r\n    event BettingEnded(address winner, uint256 amount);\r\n\r\n    // The following is a so-called natspec comment,\r\n    // recognizable by the three slashes.\r\n    // It will be shown when the user is asked to\r\n    // confirm a transaction.\r\n\r\n    /// Create a simple auction with `_biddingTime`\r\n    /// seconds bidding time on behalf of the\r\n    /// beneficiary address `_beneficiary`.\r\n    // constructor(\r\n    //     uint _biddingTime\r\n    //     // address payable _beneficiary\r\n    // ) public {\r\n    //     // beneficiary = _beneficiary;\r\n    //     bidEndTime = now + _biddingTime;\r\n    // }\r\n\r\n    /// Bid on the auction with the value sent\r\n    /// together with this transaction.\r\n    /// The value will only be refunded if the\r\n    /// auction is not won.\r\n    function bid(uint256 bidValue) public payable {\r\n        // No arguments are necessary, all\r\n        // information is already part of\r\n        // the transaction. The keyword payable\r\n        // is required for the function to\r\n        // be able to receive Ether.\r\n\r\n        // Revert the call if the bidding\r\n        // period is over.\r\n        // require(\r\n        //     now <= bidEndTime,\r\n        //     \"Auction already ended.\"\r\n        // );\r\n\r\n        // If the bid is not higher, send the\r\n        // money back (the failing require\r\n        // will revert all changes in this\r\n        // function execution including\r\n        // it having received the money).\r\n        // require(\r\n        //     msg.value > highestBid,\r\n        //     \"There already is a higher bid.\"\r\n        // );\r\n\r\n        bids.push(Bid({\r\n            account: msg.sender,\r\n            bid: bidValue\r\n        }));\r\n\r\n        //tocheck: Need to send money back to loser?\r\n\r\n        // if (highestBid != 0) {\r\n        //     // Sending back the money by simply using\r\n        //     // highestBidder.send(highestBid) is a security risk\r\n        //     // because it could execute an untrusted contract.\r\n        //     // It is always safer to let the recipients\r\n        //     // withdraw their money themselves.\r\n        //     pendingReturns[highestBidder] += highestBid;\r\n        // }\r\n        // highestBidder = msg.sender;\r\n        // highestBid = msg.value;\r\n\r\n        //todo: publish event when bidadded...\r\n        // emit HighestBidIncreased(msg.sender, msg.value);\r\n    }\r\n\r\n    /// Withdraw a bid that was overbid.\r\n    // function withdraw() public returns (bool) {\r\n    //     uint amount = pendingReturns[msg.sender];\r\n    //     if (amount > 0) {\r\n    //         // It is important to set this to zero because the recipient\r\n    //         // can call this function again as part of the receiving call\r\n    //         // before `send` returns.\r\n    //         pendingReturns[msg.sender] = 0;\r\n\r\n    //         if (!msg.sender.send(amount)) {\r\n    //             // No need to call throw here, just reset the amount owing\r\n    //             pendingReturns[msg.sender] = amount;\r\n    //             return false;\r\n    //         }\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    /// End the auction and send the highest bid\r\n    /// to the beneficiary.\r\n    // This function is called by executionContract, that is owned by StockVoting\r\n    function bettingEnd(uint256 stockValue) public {\r\n        // It is a good guideline to structure functions that interact\r\n        // with other contracts (i.e. they call functions or send Ether)\r\n        // into three phases:\r\n        // 1. checking conditions\r\n        // 2. performing actions (potentially changing conditions)\r\n        // 3. interacting with other contracts\r\n        // If these phases are mixed up, the other contract could call\r\n        // back into the current contract and modify the state or cause\r\n        // effects (ether payout) to be performed multiple times.\r\n        // If functions called internally include interaction with external\r\n        // contracts, they also have to be considered interaction with\r\n        // external contracts.\r\n\r\n        // 1. Conditions\r\n        //todo: find closest bid\r\n        // while (voters[to].delegate != address(0)) {\r\n        //     to = voters[to].delegate;\r\n\r\n        //     // We found a loop in the delegation, not allowed.\r\n        //     require(to != msg.sender, \"Found loop in delegation.\");\r\n        // }\r\n\r\n        //todo: Check if the msg.sender is the executioncontract\r\n\r\n        //todo: check time\r\n\r\n        // require(now >= bidEndTime, \"Auction not yet ended.\");\r\n        // require(!ended, \"auctionEnd has already been called.\");\r\n\r\n        // 2. Effects\r\n        ended = true;\r\n        // value needs to be transfered to the \r\n        // actualValue=msg.value;\r\n\r\n        emit BettingEnded(msg.sender, stockValue);\r\n\r\n        // 3. Interaction\r\n        // beneficiary.transfer(highestBid);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Alexander\\Desktop\\repo\\contracts\\BettingContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Alexander/Desktop/repo/contracts/BettingContract.sol",
    "exportedSymbols": {
      "BettingContract": [
        52
      ]
    },
    "id": 53,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 52,
        "linearizedBaseContracts": [
          52
        ],
        "name": "BettingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BettingContract.Bid",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "435:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "435:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "485:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "485:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bid",
            "nodeType": "StructDefinition",
            "scope": 52,
            "src": "354:162:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "name": "bids",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "524:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage",
              "typeString": "struct BettingContract.Bid[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7,
                "name": "Bid",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 6,
                "src": "524:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
                  "typeString": "struct BettingContract.Bid"
                }
              },
              "id": 8,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "524:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage_ptr",
                "typeString": "struct BettingContract.Bid[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "bidEndTime",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "632:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "632:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "ended",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "1056:10:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1056:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "BettingEnded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1206:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1222:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:32:0"
            },
            "src": "1187:51:0"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1998:1520:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 28,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "2798:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2798:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 30,
                            "name": "bidValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2828:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27,
                          "name": "Bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "2770:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Bid_$6_storage_ptr_$",
                            "typeString": "type(struct BettingContract.Bid storage pointer)"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "account",
                          "bid"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2770:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$6_memory",
                          "typeString": "struct BettingContract.Bid memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bid_$6_memory",
                          "typeString": "struct BettingContract.Bid memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage",
                          "typeString": "struct BettingContract.Bid storage ref[] storage ref"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2760:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Bid_$6_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BettingContract.Bid storage ref) returns (uint256)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "2760:89:0"
                }
              ]
            },
            "documentation": "Bid on the auction with the value sent\n together with this transaction.\n The value will only be refunded if the\n auction is not won.",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "bidValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1965:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:18:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:0"
            },
            "scope": 52,
            "src": "1952:1566:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "4447:1539:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "ended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5753:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5761:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5753:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:12:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "5880:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5880:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "stockValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5892:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "BettingEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5867:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5867:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "EmitStatement",
                  "src": "5862:41:0"
                }
              ]
            },
            "documentation": "End the auction and send the highest bid\n to the beneficiary.",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bettingEnd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "name": "stockValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "4420:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4419:20:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4447:0:0"
            },
            "scope": 52,
            "src": "4400:1586:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 53,
        "src": "49:5940:0"
      }
    ],
    "src": "0:5989:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Alexander/Desktop/repo/contracts/BettingContract.sol",
    "exportedSymbols": {
      "BettingContract": [
        52
      ]
    },
    "id": 53,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 52,
        "linearizedBaseContracts": [
          52
        ],
        "name": "BettingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BettingContract.Bid",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 3,
                "name": "bid",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "435:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "435:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "name": "account",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "485:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "485:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Bid",
            "nodeType": "StructDefinition",
            "scope": 52,
            "src": "354:162:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9,
            "name": "bids",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "524:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage",
              "typeString": "struct BettingContract.Bid[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7,
                "name": "Bid",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 6,
                "src": "524:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
                  "typeString": "struct BettingContract.Bid"
                }
              },
              "id": 8,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "524:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage_ptr",
                "typeString": "struct BettingContract.Bid[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "bidEndTime",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "632:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "632:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "ended",
            "nodeType": "VariableDeclaration",
            "scope": 52,
            "src": "1056:10:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1056:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 19,
            "name": "BettingEnded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "name": "winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1206:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1222:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1205:32:0"
            },
            "src": "1187:51:0"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "1998:1520:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 28,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "2798:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2798:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 30,
                            "name": "bidValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2828:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27,
                          "name": "Bid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "2770:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Bid_$6_storage_ptr_$",
                            "typeString": "type(struct BettingContract.Bid storage pointer)"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "account",
                          "bid"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2770:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bid_$6_memory",
                          "typeString": "struct BettingContract.Bid memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bid_$6_memory",
                          "typeString": "struct BettingContract.Bid memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24,
                        "name": "bids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Bid_$6_storage_$dyn_storage",
                          "typeString": "struct BettingContract.Bid storage ref[] storage ref"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2760:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Bid_$6_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BettingContract.Bid storage ref) returns (uint256)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2760:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "2760:89:0"
                }
              ]
            },
            "documentation": "Bid on the auction with the value sent\n together with this transaction.\n The value will only be refunded if the\n auction is not won.",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "bidValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1965:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:18:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1998:0:0"
            },
            "scope": 52,
            "src": "1952:1566:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "4447:1539:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "ended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "5753:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5761:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5753:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:12:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "5880:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5880:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "stockValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5892:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44,
                      "name": "BettingEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "5867:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5867:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "EmitStatement",
                  "src": "5862:41:0"
                }
              ]
            },
            "documentation": "End the auction and send the highest bid\n to the beneficiary.",
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bettingEnd",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "name": "stockValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "4420:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4419:20:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4447:0:0"
            },
            "scope": 52,
            "src": "4400:1586:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 53,
        "src": "49:5940:0"
      }
    ],
    "src": "0:5989:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-04-25T10:33:07.026Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "bettingEnd(uint256)": {
        "notice": "End the auction and send the highest bid to the beneficiary."
      },
      "bid(uint256)": {
        "notice": "Bid on the auction with the value sent together with this transaction. The value will only be refunded if the auction is not won."
      }
    }
  }
}